<!-- Floating Call Button (opens NoHold modal) -->
<button type="button" aria-label="Call Support" class="fixed bottom-5 right-5 z-40 w-14 h-14 md:w-16 md:h-16 rounded-full bg-green-600 hover:bg-green-700 text-white shadow-lg flex items-center justify-center ring-2 ring-white focus:outline-none focus:ring-4 focus:ring-green-300 transition" onclick="(function(){ var m=document.getElementById('nohold-modal'); if(m){ m.classList.remove('hidden'); setTimeout(function(){ m.classList.remove('opacity-0'); }, 10); } })()">
  <span class="sr-only">Call Support</span>
  <svg xmlns="http://www.w3.org/2000/svg" class="w-7 h-7 md:w-8 md:h-8" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
    <path stroke-linecap="round" stroke-linejoin="round" d="M3 5a2 2 0 012-2h2.28a1 1 0 01.948.684l1.02 3.06a1 1 0 01-.272 1.07l-1.2 1.2a16 16 0 006.36 6.36l1.2-1.2a1 1 0 011.07-.272l3.06 1.02A1 1 0 0121 17.72V20a2 2 0 01-2 2h-1C9.82 22 2 14.18 2 5v0a2 2 0 011-1.732V3z" />
  </svg>
</button>

<!-- NoHold AI Agent Modal (Chat) -->
<div id="nohold-modal" class="fixed inset-0 z-50 hidden opacity-0 transition-opacity duration-200">
  <div class="absolute inset-0 bg-black bg-opacity-50" onclick="(function(){ var m=document.getElementById('nohold-modal'); if(m){ m.classList.add('opacity-0'); setTimeout(function(){ m.classList.add('hidden'); }, 200); } })()"></div>
  <div class="relative max-w-md w-[92%] md:w-full mx-auto mt-24">
    <div class="bg-white rounded-xl shadow-2xl overflow-hidden flex flex-col max-h-[80vh]">
      <div class="px-5 py-4 border-b flex items-center justify-between">
        <div class="flex items-center space-x-2">
          <div class="w-9 h-9 rounded-full bg-blue-600 text-white flex items-center justify-center font-bold">N</div>
          <div>
            <div class="text-base font-semibold">NoHold — AI Agent</div>
            <div class="text-xs text-gray-500">Ask me anything about your  service</div>
          </div>
        </div>
        <button type="button" class="text-gray-500 hover:text-gray-700" onclick="(function(){ var m=document.getElementById('nohold-modal'); if(m){ m.classList.add('opacity-0'); setTimeout(function(){ m.classList.add('hidden'); }, 200); } })()">&times;</button>
      </div>
      <div id="nohold-chat" class="flex-1 overflow-y-auto p-4 space-y-3 bg-gray-50">
        <div class="flex items-start space-x-2">
          <div class="w-7 h-7 rounded-full bg-blue-600 text-white flex items-center justify-center text-xs font-bold">N</div>
          <div class="bg-white border rounded-lg px-3 py-2 text-sm shadow-sm">Hi, I'm NoHold. How can I help you today?</div>
        </div>
      </div>
      <form id="nohold-form" class="p-3 border-t bg-white flex items-center space-x-2" onsubmit="return false;">
        <input id="nohold-input" type="text" class="flex-1 px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600" placeholder="Type your message..." />
        <button id="nohold-send" type="button" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">Send</button>
      </form>
    </div>
  </div>
</div>

<!-- Socket.IO client and chat logic -->
<script src="/socket.io/socket.io.js"></script>
<script>
  (function(){
    if (!window.__noholdInit) {
      window.__noholdInit = true;
      var socket;
      function ensureSocket(){
        if (!socket) {
          // connect to same-origin Socket.IO
          socket = window.io();
          // incoming replies
          socket.on('nohold:reply', function(payload){
            addBotMessage(payload && payload.text ? payload.text : '...');
          });
          socket.on('nohold:typing', function(state){
            toggleTyping(state === true);
          });
        }
      }

      function addBotMessage(text){
        var chat = document.getElementById('nohold-chat');
        if (!chat) return;
        var row = document.createElement('div');
        row.className = 'flex items-start space-x-2';
        row.innerHTML = '<div class="w-7 h-7 rounded-full bg-blue-600 text-white flex items-center justify-center text-xs font-bold">N</div>'+
                        '<div class="bg-white border rounded-lg px-3 py-2 text-sm shadow-sm">'+escapeHtml(text)+'</div>';
        chat.appendChild(row);
        chat.scrollTop = chat.scrollHeight;
      }
      function addUserMessage(text){
        var chat = document.getElementById('nohold-chat');
        if (!chat) return;
        var row = document.createElement('div');
        row.className = 'flex items-start space-x-2 justify-end';
        row.innerHTML = '<div class="bg-blue-600 text-white rounded-lg px-3 py-2 text-sm shadow-sm">'+escapeHtml(text)+'</div>';
        chat.appendChild(row);
        chat.scrollTop = chat.scrollHeight;
      }
      var typingEl;
      function toggleTyping(show){
        var chat = document.getElementById('nohold-chat');
        if (!chat) return;
        if (show) {
          if (!typingEl) {
            typingEl = document.createElement('div');
            typingEl.className = 'flex items-start space-x-2';
            typingEl.innerHTML = '<div class="w-7 h-7 rounded-full bg-blue-600 text-white flex items-center justify-center text-xs font-bold">N</div>'+
              '<div class="bg-white border rounded-lg px-3 py-2 text-sm shadow-sm text-gray-500">Typing…</div>';
            chat.appendChild(typingEl);
          }
        } else {
          if (typingEl && typingEl.parentNode) typingEl.parentNode.removeChild(typingEl);
          typingEl = null;
        }
        chat.scrollTop = chat.scrollHeight;
      }
      function escapeHtml(str){
        return String(str).replace(/[&<>"]+/g, function(s){
          return {'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;'}[s] || s;
        });
      }

      function sendMessage(){
        var input = document.getElementById('nohold-input');
        var val = (input && input.value || '').trim();
        if (!val) return;
        addUserMessage(val);
        input.value = '';
        ensureSocket();
        socket.emit('nohold:message', { text: val });
      }

      document.addEventListener('click', function(e){
        if (e.target && e.target.id === 'nohold-send') {
          sendMessage();
        }
      });
      document.addEventListener('keydown', function(e){
        if (e.key === 'Enter'){
          var el = document.activeElement;
          if (el && el.id === 'nohold-input') {
            e.preventDefault();
            sendMessage();
          }
        }
      });
    }
  })();
</script>
